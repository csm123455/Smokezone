// Generated by view binder compiler. Do not edit!
package com.smokezone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.naver.maps.map.MapView;
import com.naver.maps.map.widget.LocationButtonView;
import com.smokezone.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LocationButtonView currentLocationButton;

  @NonNull
  public final Button editModeButton;

  @NonNull
  public final Button findNearBtn;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final Button navigateButton;

  private ActivityMapBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LocationButtonView currentLocationButton, @NonNull Button editModeButton,
      @NonNull Button findNearBtn, @NonNull MapView mapView, @NonNull Button navigateButton) {
    this.rootView = rootView;
    this.currentLocationButton = currentLocationButton;
    this.editModeButton = editModeButton;
    this.findNearBtn = findNearBtn;
    this.mapView = mapView;
    this.navigateButton = navigateButton;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.currentLocationButton;
      LocationButtonView currentLocationButton = ViewBindings.findChildViewById(rootView, id);
      if (currentLocationButton == null) {
        break missingId;
      }

      id = R.id.editModeButton;
      Button editModeButton = ViewBindings.findChildViewById(rootView, id);
      if (editModeButton == null) {
        break missingId;
      }

      id = R.id.findNearBtn;
      Button findNearBtn = ViewBindings.findChildViewById(rootView, id);
      if (findNearBtn == null) {
        break missingId;
      }

      id = R.id.map_view;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.navigateButton;
      Button navigateButton = ViewBindings.findChildViewById(rootView, id);
      if (navigateButton == null) {
        break missingId;
      }

      return new ActivityMapBinding((CoordinatorLayout) rootView, currentLocationButton,
          editModeButton, findNearBtn, mapView, navigateButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
