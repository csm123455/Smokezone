// Generated by view binder compiler. Do not edit!
package com.smokezone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.smokezone.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSignUp;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final EditText etNickname;

  @NonNull
  public final EditText etPassword;

  @NonNull
  public final EditText etPasswordConfirm;

  private ActivitySignupBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSignUp,
      @NonNull EditText etEmail, @NonNull EditText etNickname, @NonNull EditText etPassword,
      @NonNull EditText etPasswordConfirm) {
    this.rootView = rootView;
    this.btnSignUp = btnSignUp;
    this.etEmail = etEmail;
    this.etNickname = etNickname;
    this.etPassword = etPassword;
    this.etPasswordConfirm = etPasswordConfirm;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSignUp;
      Button btnSignUp = ViewBindings.findChildViewById(rootView, id);
      if (btnSignUp == null) {
        break missingId;
      }

      id = R.id.etEmail;
      EditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etNickname;
      EditText etNickname = ViewBindings.findChildViewById(rootView, id);
      if (etNickname == null) {
        break missingId;
      }

      id = R.id.etPassword;
      EditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.etPasswordConfirm;
      EditText etPasswordConfirm = ViewBindings.findChildViewById(rootView, id);
      if (etPasswordConfirm == null) {
        break missingId;
      }

      return new ActivitySignupBinding((ConstraintLayout) rootView, btnSignUp, etEmail, etNickname,
          etPassword, etPasswordConfirm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
